package br.edu.qi.view;

import br.edu.qi.model.Date;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Rafael Pinheiro
 * @since 20/*05/2019 - 16:13
 * @version 1.2 BetaUi
 */
public class UIAddDate extends javax.swing.JFrame {

    /**
     * Creates new form UIAddDate
     */
    public UIAddDate() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgAge = new javax.swing.ButtonGroup();
        jlpDate = new javax.swing.JLayeredPane();
        jlDay = new javax.swing.JLabel();
        jlMonth = new javax.swing.JLabel();
        jtDay = new javax.swing.JTextField();
        jtMonth = new javax.swing.JTextField();
        jrOver18 = new javax.swing.JRadioButton();
        jrUnder18 = new javax.swing.JRadioButton();
        jcDay = new javax.swing.JCheckBox();
        jcAfternoon = new javax.swing.JCheckBox();
        jcNight = new javax.swing.JCheckBox();
        jcDawn = new javax.swing.JCheckBox();
        jlAge = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jlpOptions = new javax.swing.JLayeredPane();
        jbVerify = new javax.swing.JButton();
        jbClean = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaResult = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlpDate.setBorder(javax.swing.BorderFactory.createTitledBorder("Date"));

        jlDay.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jlDay.setText("Day");

        jlMonth.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jlMonth.setText("Month");

        jtDay.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jtDay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtDayKeyPressed(evt);
            }
        });

        jtMonth.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jtMonth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtMonthKeyPressed(evt);
            }
        });

        bgAge.add(jrOver18);
        jrOver18.setText("+18");

        bgAge.add(jrUnder18);
        jrUnder18.setText("-18");

        jcDay.setText("Day");
        jcDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcDayActionPerformed(evt);
            }
        });

        jcAfternoon.setText("Afternoon");

        jcNight.setText("Night");
        jcNight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcNightActionPerformed(evt);
            }
        });

        jcDawn.setText("Dawn");

        jlAge.setText("Age");

        jLabel1.setText("Preferences");

        jlpDate.setLayer(jlDay, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDate.setLayer(jlMonth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDate.setLayer(jtDay, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDate.setLayer(jtMonth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDate.setLayer(jrOver18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDate.setLayer(jrUnder18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDate.setLayer(jcDay, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDate.setLayer(jcAfternoon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDate.setLayer(jcNight, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDate.setLayer(jcDawn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDate.setLayer(jlAge, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpDate.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpDateLayout = new javax.swing.GroupLayout(jlpDate);
        jlpDate.setLayout(jlpDateLayout);
        jlpDateLayout.setHorizontalGroup(
            jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpDateLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlDay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtDay, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(jtMonth))
                .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jlpDateLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jlpDateLayout.createSequentialGroup()
                                .addComponent(jrUnder18, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jrOver18, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jlpDateLayout.createSequentialGroup()
                                .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jcNight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcDay, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jcAfternoon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcDawn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(52, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlpDateLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlpDateLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(100, 100, 100))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlpDateLayout.createSequentialGroup()
                                .addComponent(jlAge, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(108, 108, 108))))))
        );
        jlpDateLayout.setVerticalGroup(
            jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpDateLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlDay, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlMonth)
                    .addComponent(jtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlpDateLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcAfternoon)
                    .addComponent(jcDay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcNight)
                    .addComponent(jcDawn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlAge)
                .addGap(9, 9, 9)
                .addGroup(jlpDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrUnder18)
                    .addComponent(jrOver18))
                .addGap(17, 17, 17))
        );

        jlpOptions.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        jbVerify.setText("Verify");
        jbVerify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVerifyActionPerformed(evt);
            }
        });

        jbClean.setText("Clean");
        jbClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCleanActionPerformed(evt);
            }
        });

        jlpOptions.setLayer(jbVerify, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpOptions.setLayer(jbClean, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpOptionsLayout = new javax.swing.GroupLayout(jlpOptions);
        jlpOptions.setLayout(jlpOptionsLayout);
        jlpOptionsLayout.setHorizontalGroup(
            jlpOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpOptionsLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jbVerify, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145)
                .addComponent(jbClean, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jlpOptionsLayout.setVerticalGroup(
            jlpOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jlpOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbVerify, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbClean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jtaResult.setColumns(20);
        jtaResult.setRows(5);
        jtaResult.setFocusable(false);
        jScrollPane1.setViewportView(jtaResult);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlpDate)
                    .addComponent(jlpOptions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlpDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlpOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add(){
        ArrayList preferences = new ArrayList<>();
        if (jcAfternoon.isSelected())
            preferences.add(jcAfternoon.getText());
        if (jcDawn.isSelected())
            preferences.add(jcDawn.getText());
        if (jcDay.isSelected())
            preferences.add(jcDay.getText());
        if (jcNight.isSelected())
            preferences.add(jcNight.getText());
        
        Date date = new Date(Integer.parseInt(jtDay.getText()),Integer.parseInt(jtMonth.getText()),jrOver18.isSelected(),preferences);
        jtaResult.setText(date.toString());
    }
    
    private void clean(){
        jtDay.setText("");
        jtMonth.setText("");
        bgAge.clearSelection();
        jcAfternoon.setSelected(false);
        jcDawn.setSelected(false);
        jcDay.setSelected(false);
        jcNight.setSelected(false);
        jtDay.grabFocus();
    }
    
    private void jbVerifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVerifyActionPerformed
        add();
        clean();
    }//GEN-LAST:event_jbVerifyActionPerformed

    private void jbCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCleanActionPerformed
        clean();
    }//GEN-LAST:event_jbCleanActionPerformed

    private void jtDayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDayKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            jtMonth.grabFocus();
    }//GEN-LAST:event_jtDayKeyPressed

    private void jtMonthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtMonthKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            add();
    }//GEN-LAST:event_jtMonthKeyPressed

    private void jcDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcDayActionPerformed

    private void jcNightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcNightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcNightActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIAddDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIAddDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIAddDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIAddDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UIAddDate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgAge;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbClean;
    private javax.swing.JButton jbVerify;
    private javax.swing.JCheckBox jcAfternoon;
    private javax.swing.JCheckBox jcDawn;
    private javax.swing.JCheckBox jcDay;
    private javax.swing.JCheckBox jcNight;
    private javax.swing.JLabel jlAge;
    private javax.swing.JLabel jlDay;
    private javax.swing.JLabel jlMonth;
    private javax.swing.JLayeredPane jlpDate;
    private javax.swing.JLayeredPane jlpOptions;
    private javax.swing.JRadioButton jrOver18;
    private javax.swing.JRadioButton jrUnder18;
    private javax.swing.JTextField jtDay;
    private javax.swing.JTextField jtMonth;
    private javax.swing.JTextArea jtaResult;
    // End of variables declaration//GEN-END:variables
}
